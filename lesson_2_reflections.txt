What happens when you initialize a repository? Why do you need to do it?
It prepares a folder to be a repository and creates the environment for git to work.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It is like a transtition environment of the things that would be commited, where it is logical. THe repository are the git files and the working directory the actual files. It offers flexibility of commmits.

How can you use the staging area to make sure you have one commit per logical change?
It can help you to save only the files that you are interested in commit rather than all that have changes.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
It can create different versions of the system, so it is easier to do A/B testing or get creative and test ideas. It can help to track what it is working every person in a team.

How do the diagrams help you visualize the branch structure?
It makes easier to understand and see who is the parent and where is the master branch.

Reflect: Merging Two Branches

Now that you’ve learned how to use Git to merge branches together, go add the following question and your thoughts on it to your reflections file:

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
One commit that combines the code of the two branches into one. Because the merge functionalities and have two parents

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
It saves time to review the different versions of code within the system, but creates problems when two persons update the same area of code.